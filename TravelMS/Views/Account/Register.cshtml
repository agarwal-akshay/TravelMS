@model TravelMS.Models.RegisterModel
@{
    ViewBag.Title = "Register";
}

<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
    <h2>Create a new account.</h2>
</hgroup>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            document.getElementById("RegisterButton").disabled = true;
            document.getElementById("RegisterButton").style.opacity = "0.5";
            document.getElementById("RegisterButton").style.cursor = "not-allowed"
        }
        );
        function checkAvailUser_ID() {
            var serviceURL = '/AjaxMethods/User_IDCheck';
            var User_ID = document.getElementById('User_ID').value;
            $.ajax({
                type: "POST",
                url: serviceURL,
                data: { User_ID: User_ID },
                dataType: "text",
                success: successFunc,
                error: errorFunc
            });

            function successFunc(data,status) {
                if ((data == true) || (data=="True")) {
                    document.getElementById("RegisterButton").disabled = false;
                    document.getElementById("RegisterButton").removeAttribute("style");
                    document.getElementById('User_ID').style.backgroundColor = 'lightgreen';
                    alert("User ID Available");
                }
                else {
                    document.getElementById('User_ID').style.backgroundColor = 'red';
                    alert("User ID Not Available");
                }
            }

            function errorFunc() {
                alert('Error');
            }
        }
    </script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    var locationItems = new List<SelectListItem>
        {
              new SelectListItem { Text = "Mumbai", Value = "Mumbai" },
              new SelectListItem { Text = "Bangalore", Value = "Bangalore"}
        };
    var levelItems = new List<SelectListItem>
        {
              new SelectListItem { Text = "1", Value = "1" },
              new SelectListItem { Text = "2", Value = "2" },
              new SelectListItem { Text = "3", Value = "3" },
              new SelectListItem { Text = "4", Value = "4" },
              new SelectListItem { Text = "5", Value = "5" },
              new SelectListItem { Text = "6", Value = "6" }
        };
    <fieldset>
        <legend>New User Sign Up</legend>
            <div class="editor-label">
                @Html.LabelFor(m => m.User_ID)
            </div>
            <div class="editor-field">
                @Html.EditorFor(m => m.User_ID, new { @onkeypress = "document.getElementById(\"RegisterButton\").disabled = true;document.getElementById('User_ID').style.backgroundColor='';" })
                @Html.ValidationMessageFor(m => m.User_ID)
                <input id="Button1" type="button" value="Check Availablity" onclick="checkAvailUser_ID()" />
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Password)
            </div>
            <div class="editor-field">
                @Html.EditorFor(m => m.Password)
                @Html.ValidationMessageFor(m => m.Password)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Emp_ID)
            </div>
            <div class="editor-field">
                @Html.EditorFor(m => m.Emp_ID)
                @Html.ValidationMessageFor(m => m.Emp_ID)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Emp_Name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(m => m.Emp_Name)
                @Html.ValidationMessageFor(m => m.Emp_Name)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Gender)
            </div>
            <div class="radio-inline">
                @Html.RadioButtonFor(m => m.Gender, "M") Male
                @Html.RadioButtonFor(m => m.Gender, "F") Female
                @Html.ValidationMessageFor(m => m.Gender)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Date_of_Birth)
            </div>
            <div class="editor-field">
                @Html.EditorFor(m => m.Date_of_Birth)
                @Html.ValidationMessageFor(m => m.Date_of_Birth)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Date_of_Joining)
            </div>
            <div class="editor-field">
                @Html.EditorFor(m => m.Date_of_Joining)
                @Html.ValidationMessageFor(m => m.Date_of_Joining)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Job_Location)
            </div>
            <div class="dropdown">
                @Html.DropDownListFor(m => m.Job_Location, new SelectList(locationItems, "Value", "Text"))
                @Html.ValidationMessageFor(m => m.Job_Location)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Job_Level)
            </div>
            <div class="dropdown">
                @Html.DropDownListFor(m => m.Job_Level, new SelectList(levelItems, "Value", "Text"))
                @Html.ValidationMessageFor(m => m.Job_Level)
            </div>
        <input type="submit" value="Register" id="RegisterButton" />
    </fieldset>
}
<div>
    @Html.ActionLink("Back to Home Page", "Index", "Home")
</div>